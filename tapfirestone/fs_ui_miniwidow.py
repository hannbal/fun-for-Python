# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\Tony\python\mouseclick\miniwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtCore import *
from PyQt5.QtWidgets import  QMainWindow
import win32gui
import win32api
import win32con
import time
#import os
import threading
import keyboard

class WorkThread(QtCore.QThread):
    _signal = pyqtSignal(str)
    def __init__(self):
        super(WorkThread, self).__init__()
        
    def __del__(self):
        self.wait()    
    def run (self):
        global running
        global count
        titlename = "Firestone"
        
        try:
            #获取句柄
            hwnd = win32gui.FindWindow(0, titlename)
        #获取窗口左上角和右下角坐标
            left, top, right, bottom = win32gui.GetWindowRect(hwnd)
        
            x = left - 300
            y = top + 300
            post = win32api.MAKELONG(x,y)
        
            while running:
                time.sleep(0.1)
                win32api.SendMessage(hwnd, win32con.WM_LBUTTONDOWN, win32con.MK_LBUTTON, post)
                win32api.SendMessage(hwnd, win32con.WM_LBUTTONUP, win32con.MK_LBUTTON, post)
            
        except Exception as e: 
            print(e)
            ui.on_activate_w()
            ui.textEdit.append(e.__str__())
        


class Ui_MainWindow(QMainWindow):
    def __init__(self, parent=None):
        super(Ui_MainWindow, self).__init__(parent)
        self.setupUi(self)
        self.workthread = WorkThread()
        self.workthread._signal.connect(self.callback)
        t=threading.Thread(target=self.keyboard_wait)
        t.setDaemon(True)
        t.start()

        
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(598, 458)
        MainWindow.setMinimumSize(QtCore.QSize(350, 200))
        MainWindow.setMaximumSize(QtCore.QSize(350, 200))
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.pushButton = QtWidgets.QPushButton(self.centralWidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 50, 75, 30))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralWidget)
        self.pushButton_2.setGeometry(QtCore.QRect(20, 100, 75, 30))
        self.pushButton_2.setObjectName("pushButton_2")
        self.textEdit = QtWidgets.QTextEdit(self.centralWidget)
        self.textEdit.setEnabled(True)
        self.textEdit.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.textEdit.setGeometry(QtCore.QRect(120, 40, 200, 150))
        self.textEdit.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.textEdit.setObjectName("textEdit")
        MainWindow.setCentralWidget(self.centralWidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.pushButton.clicked.connect(self.on_activate_e)
        self.pushButton_2.clicked.connect(self.on_activate_w)
        
#class Ui_Dialog(object):
#    def setupUi(self, Dialog):
#        Dialog.setObjectName("Dialog")
#        Dialog.resize(418, 266)
#        Dialog.setSizeGripEnabled(True)
##        self.textEdit = QtWidgets.QTextEdit(Dialog)
##        self.textEdit.setGeometry(QtCore.QRect(120, 20, 151, 21))
##        self.textEdit.setObjectName("textEdit")
##        self.pushButton = QtWidgets.QPushButton(Dialog)
##        self.pushButton.setGeometry(QtCore.QRect(30, 60, 75, 23))
##        self.pushButton.setObjectName("pushButton")
##        self.label = QtWidgets.QLabel(Dialog)
##        self.label.setGeometry(QtCore.QRect(40, 20, 61, 21))
##        self.label.setObjectName("label")
##        self.label_2 = QtWidgets.QLabel(Dialog)
##        self.label_2.setGeometry(QtCore.QRect(120, 50, 111, 31))
##        self.label_2.setObjectName("label_2")
#        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
#        self.pushButton_2.setGeometry(QtCore.QRect(30, 110, 75, 23))
#        self.pushButton_2.setObjectName("pushButton_2")
#        self.pushButton_3 = QtWidgets.QPushButton(Dialog)
#        self.pushButton_3.setGeometry(QtCore.QRect(150, 110, 75, 23))
#        self.pushButton_3.setObjectName("pushButton_3")

       
#        self.retranslateUi(Dialog)
#        QtCore.QMetaObject.connectSlotsByName(Dialog)
#        self.pushButton_2.clicked.connect(self.on_activate_e)
#        self.pushButton_3.clicked.connect(self.on_activate_w)

#    def retranslateUi(self, Dialog):
#        _translate = QtCore.QCoreApplication.translate
#        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
##        self.pushButton.setText(_translate("Dialog", "获取坐标"))
##        self.label.setText(_translate("Dialog", "窗口名称"))
##        self.label_2.setText(_translate("Dialog", "鼠标坐标：0,0"))
#        self.pushButton_2.setText(_translate("Dialog", "开始"))
#        self.pushButton_3.setText(_translate("Dialog", "结束"))



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "start"))
        self.pushButton_2.setText(_translate("MainWindow", "stop"))
        
    
    def on_activate_e(self):
        global running
        global count
        
        #print(running)
        if running ==False:
            running=True
            self.textEdit.append('=====thread '+str(count)+'=====')
            print('=====thread ', count,'=====')
            count+=1
        
        self.workthread.start()

        
        
    def callback(self, msg):
            self.textEdit.append(str(msg))
            

    def on_activate_w(self):
        global running
        running=False
        self.textEdit.append("clicking stop")
        print("clicking stop")
        self.textEdit.append('=====thread endding=======')
        print('=====thread endding=======')
        
    def keyboard_wait(self):
        keyboard.add_hotkey('ctrl+k', self.on_activate_e)
        keyboard.add_hotkey('ctrl+alt+k', self.on_activate_w)
        keyboard.wait() 

        


if __name__ == "__main__":
    import sys
    global running
    global count
    count = 1
    running = False
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
